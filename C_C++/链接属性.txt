----------------------------------------------------------------------------------------------------

链接属性（linkage）是指标识符（变量名或函数名）在不同源文件之间如何关联。
链接属性决定了一个标识符是否可以在多个源文件中使用以及如何使用。
链接属性主要分为以下三类:

外部链接（External）：
	当一个标识符具有外部链接时，意味着这个标识符可以在一个源文件中定义，然后在另一个源文件中通过extern声明来引用。
	默认情况下，在任何源文件中定义的全局变量和函数都具有外部链接属性，除非它们被声明为static。
	使用外部标识符时发生引用而不是复制，即操作的是内存中同一个变量或函数

内部链接（Internal）：
	当一个标识符具有内部链接时，它只能在其定义所在的源文件内访问。即使在其他源文件中使用相同的名称，也不会与该标识符发生冲突。
	在全局变量或函数前加上static关键字可以将其设置为内部链接。这意味着该变量或函数仅限于其所在文件内使用。

无链接（None）：
	局部变量、函数参数等属于此类。这些变量的作用域限制在其所在的代码块（如函数体）内，不能在其它地方引用。
	它们没有链接属性，因为它们的存在只局限于定义它们的局部作用域，并且不会与其他相同名称的标识符产生冲突。

----------------------------------------------------------------------------------------------------

变量的外部链接


在fileA.c中定义一个全局变量:
int globalVar = 10;  // fileA.c

然后在fileB.c中使用extern关键字进行声明:
extern int globalVar;  // fileB.c

之后就可以在fileB.c中使用变量globalVar
printf("%d\n", globalVar);

通过extern声明来引用一个全局变量，无论是在fileA.c还是fileB.c中对这个变量进行修改，都会影响该变量
因为extern声明并没有创建一个新的变量副本，而是指向了同一个内存位置的同一个变量
extern int globalVar;这一行必须写在任何函数的外部(和全局变量放一起)



函数的外部链接

对于函数来说,不需要特别指定就可以在其他文件中调用它们


在fileA.c中定义一个函数
void myFunction() 
{
    printf("Hello from myFunction!\n");
}

直接在fileB.c中调用该函数即可
myFunction();


但是，为了代码的清晰性和可维护性，建议显式声明外部函数。
extern void myFunction();
myFunction();

extern void myFunction();这一行必须写在任何函数的外部(和全局变量放一起)