----------------------------------------------------------------------------------------------------

read()

write()

close()

dup() 和 dup2()



select() 用于监视多个文件描述符，以查看它们是否准备好进行读写或是否有异常条件待处理，多用于网络套接字监听

int select(int nfds, fd_set *readfds, fd_set *writefds,
          fd_set *exceptfds, struct timeval *timeout);
	nfds：要检查的最大文件描述符值加1(检查6就填7)。这个参数告诉 select() 需要检查的范围。
	readfds：指向一个 fd_set 类型的变量，其中包含需要监听的 可读文件描述符集合。
	writefds：类似前者，指向需要监听的 可写文件描述符集合。
	exceptfds：类似前者，指向需要监听的 异常条件的文件描述符集合
	timeout：超时时间。NULL 表示无限等待；也可以是一个 struct timeval 结构体指针，定义最大等待时间。
	
返回值
	发生状态变化(即可读、可写、异常)的文件描述符总数，如果超时则返回0，出错则返回-1。

----------------------------------------------------------------------------------------------------

设置文件描述符非阻塞


int flags;

// 获取文件描述符的当前标志
flags = fcntl(fd, F_GETFL, 0)

// 设置文件描述符为非阻塞
fcntl(fd, F_SETFL, flags | O_NONBLOCK)


当一个文件描述符被设置为非阻塞后，之后对其进行的所有操作都是非阻塞的

----------------------------------------------------------------------------------------------------