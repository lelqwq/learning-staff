hostname: 查看主机名

------------------------------------------------------------------------------------------------------------------------

hostnamectl set-hostname 名称: 修改主机名

------------------------------------------------------------------------------------------------------------------------

ip addr: 查看网络接口信息(debian)

------------------------------------------------------------------------------------------------------------------------

rmdir: 删除空目录

------------------------------------------------------------------------------------------------------------------------

mv: 移动文件
mv [选项] 源文件 目标路径
选项:
-i：交互模式。如果目标位置已存在同名文件，会提示是否覆盖。
-f：强制模式。如果目标位置已存在同名文件，不会提示直接覆盖。
-v：显示详细信息，即显示正在执行的操作。

重命名文件也使用mv指令实现:
mv oldname newname

------------------------------------------------------------------------------------------------------------------------

mkdir: 创建目录
mkdir [选项] 目录名...
目录名可以指定一个或多个目录名称。如果给定的目录路径中包含不存在的父目录，则需要使用 -p 选项或者先创建这些父目录。
选项:
-p 或 --parents：递归创建目录，即在必要时同时创建一个目录路径中的所有父目录。
-m 或 --mode：设置目录的权限模式。如果不指定，默认将使用 umask 来决定新目录的权限。
-v 或 --verbose：显示详细信息，每次创建目录时给出提示信息。

------------------------------------------------------------------------------------------------------------------------

tar: 压缩和解压
tar [选项] 
选项:
-c:打包
-x:解压
-z:以gzip格式
-f 文件:指定文件
-v:可视化
-C 目录:解压时指定目录

------------------------------------------------------------------------------------------------------------------------

groupadd 组名: 创建组(需要root权限)

------------------------------------------------------------------------------------------------------------------------

groupdel 组名: 删除组(需要root权限)

------------------------------------------------------------------------------------------------------------------------

useradd: 创建用户(需要root权限)
useradd 选项 用户名
选项:
-c comment 指定一段注释性描述。
-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。
-g 用户组 指定用户所属的用户组。
-G 用户组，用户组 指定用户所属的附加组。
-s Shell文件 指定用户的登录Shell。
-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。

------------------------------------------------------------------------------------------------------------------------

userdel: 删除用户(需要root权限)
userdel 选项 用户名
选项: -r 把用户的主目录一起删除。

------------------------------------------------------------------------------------------------------------------------

id: 查看用户所在组(需要root权限)
id [用户名]
不提供用户名则查看目前用户所在组

------------------------------------------------------------------------------------------------------------------------

usermod: 修改用户所在组(需要root权限)
usermod 选项 用户名
选项:
-c comment 指定一段注释性描述。
-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。
-g 用户组 修改用户的主组
-aG 用户组 为用户添加到附加组(可以多个组)，a表示追加(append)，保留用户现有的组成员身份
-s Shell文件 指定用户的登录Shell。
-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。

------------------------------------------------------------------------------------------------------------------------

getent passwd: 查看全部用户信息
getent group: 查看全部组信息

------------------------------------------------------------------------------------------------------------------------

chown：更改文件所有者（owner），也可以同时更改文件所属组。
chown [–R] 所有者 文件名
chown [-R] 所有者:属组名 文件名

------------------------------------------------------------------------------------------------------------------------

chmod：更改文件权限
chmod [-R] xyz 文件或目录
chmod [-R] u=rwx,g=rwx,o=rwx 文件或目录

------------------------------------------------------------------------------------------------------------------------

systemctl: 控制系统和服务管理
启动服务：systemctl start [服务名]
停止服务：systemctl stop [服务名]
重启服务：systemctl restart [服务名]
显示服务状态信息：systemctl status [服务名]
设置服务开机自启：systemctl enable [服务名]
禁止服务开机自启：systemctl disable [服务名]
检查服务是否为活动状态：systemctl is-active [服务名]
检查服务是否开机启动：systemctl is-enabled [服务名]

------------------------------------------------------------------------------------------------------------------------

ln: 软硬链接
ln [-s] 源文件 软链接名称
-s: 表示软链接，不带-s表示硬链接
源文件：文件或目录的路径，希望链接到的目标
软链接名称：希望创建的链接的名字。如果指定一个已存在的目录作为该名称的一部分，则链接将被创建在此目录下
软链接类似快捷方式，硬链接类似共享文件

------------------------------------------------------------------------------------------------------------------------

wc: 统计文件中的字节数、字数、行数等信息，是 "word count" 的缩写
wc [选项] [文件...]
如果不指定选项，默认输出 行数、单词数、字节数(对于文本文件)，每个数值用空格分隔

常用选项
-l：统计行数
-w：统计单词数。单词指由空格或换行符分隔的字符串
-c：统计字节数。在某些系统上，可以使用 -m 来统计字符数，这样处理非ASCII字符集(比如UTF-8编码的文件)时很有效
-L：输出最长一行的字符数
如果没有提供文件名，wc 会从标准输入读取数据

------------------------------------------------------------------------------------------------------------------------

ps: 查看进程信息
ps -aux
-f：显示完整格式列表。
-a：选择所有进程。
-l ：使用长格式显示信息。
-j：显示任务信息(作业控制)。
-p pid：只显示指定 PID 的进程信息。
-t tty：只显示指定终端上的进程。
-u user：只显示属于指定用户的进程。
-U user：与 -u 类似，但匹配真实用户 ID 而不是有效用户 ID。
-x：通常与 a 结合使用，显示没有控制终端的进程。
--sort spec：根据指定的标准对输出进行排序。例如，--sort=-%cpu 按照 CPU 使用率降序排列。
-L：显示线程信息。
-T：显示与指定终端相关的进程树。
-H：显示进程层次结构（树状视图）。

------------------------------------------------------------------------------------------------------------------------

ping: 测试到某服务器是否连通
ping [-c num] ip或域名
-c 设置测试次数，若没有-c则无限测试

------------------------------------------------------------------------------------------------------------------------

apt: Debian, Ubuntu下载软件包命令

apt update: 更新系统的软件包索引(/etc/apt/sources.list中列出的软件源信息)
apt update会从配置的软件源下载最新的软件包列表，但不会安装或升级任何软件包


sudo apt upgrade: 升级所有可以升级的软件包到最新版本
如果某些升级需要删除或安装新包，则不会自动执行这些操作

如果需要强制升级并允许删除一些旧包，可以使用以下命令：
sudo apt full-upgrade


apt install 软件包: 安装软件包
可以一次安装多个软件包


apt remove 软件包: 删除软件包

如果希望同时删除软件包及其相关的配置文件，可以使用 purge：
apt purge 软件包


apt search: 搜索软件包


apt show: 查看软件包信息


apt autoremove: 清理无用的软件包或依赖包


apt clean: 清理本地存储的 .deb 文件以释放磁盘空间
这会清除 /var/cache/apt/archives/ 目录中的所有缓存文件

如果要保留最近下载的文件，可以使用：
sudo apt autoclean


apt list --installed: 列出已安装的软件包


apt list --upgradable: 列出可升级的软件包


apt --fix-broken install：修复损坏的依赖关系

------------------------------------------------------------------------------------------------------------------------

wget: 下载网络文件

wget [-b] url
-b 后台下载

------------------------------------------------------------------------------------------------------------------------

curl: 发起网络请求

curl [-O] url
-O 用于下载

------------------------------------------------------------------------------------------------------------------------

scp: 远程传输文件(基于SSH)

scp [选项] 源路径 远程服务器的用户名@远程服务器的IP地址或域名:目标路径

例：
scp -P 22 D:\123.txt lelqwq@192.168.1.12:/home/lelqwq/
选项：
-r：文件夹传输
-P：指定目标主机的SSH服务端口号（默认是22）。
-C：启用压缩模式，以减少传输数据量，适合传输大文件。
-v：显示详细的调试信息，方便排查问题。
-l：限制传输速率（单位为Kbit/s）。
-i：指定用于认证的私钥文件。

------------------------------------------------------------------------------------------------------------------------

top: 监控系统资源

top指令运行后会显示类似如下的输出：
top - 19:50:12 up  3:15,  2 users,  load average: 0.06, 0.02, 0.00
Tasks: 200 total,   1 running, 199 sleeping,   0 stopped,   0 zombie
%Cpu(s):  1.0 us,  0.5 sy,  0.0 ni, 98.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
MiB Mem :  15947.0 total,   8123.5 free,   4255.2 used,   3568.3 buff/cache
MiB Swap:   2048.0 total,   2048.0 free,      0.0 used.  11069.2 avail Mem

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
 1234 root      20   0  123456  78900   1234 R  10.0   0.5   0:12.34 process_name
 
系统摘要部分
top - 19:50:12 up    3:15,          2 users,         load average: 0.06, 0.02, 0.00
      当前时间  系统已运行时间  当前登录的用户数  系统负载平均值（1分钟、5分钟、15分钟）

任务统计部分
Tasks: 200 total,   1 running,         199 sleeping,       0 stopped,     0 zombie
       总任务数  正在运行的任务数  处于休眠状态的任务数  被暂停的任务数  僵尸进程数

CPU 使用情况
%Cpu(s):  1.0 us,  0.5 sy,  0.0 ni, 98.5 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
us：用户空间占用的 CPU 百分比
sy：内核空间占用的 CPU 百分比
ni：调整优先级的用户进程占用的 CPU 百分比
id：空闲 CPU 百分比
wa：等待 I/O 操作完成的时间百分比
hi：硬件中断占用的 CPU 百分比
si：软件中断占用的 CPU 百分比
st：虚拟机偷取的时间百分比

内存使用情况
MiB Mem :  15947.0 total,   8123.5 free,   4255.2 used,   3568.3 buff/cache
Mem：这一行表示物理内存。
total：总内存。
free：空闲内存。
used：已使用内存。
buff/cache：缓冲区和缓存使用的内存。

MiB Swap:   2048.0 total,   2048.0 free,      0.0 used.  11069.2 avail Mem
Swap：这一行表式交换分区使用情况。
total：总交换空间。
free：空闲交换空间。
used：已使用的交换空间。

进程列表
PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
PID：进程 ID。
USER：运行该进程的用户。
PR：进程优先级。
NI：Nice 值（负值表示高优先级，正值表示低优先级）。
VIRT：进程使用的虚拟内存总量。
RES：进程使用的物理内存大小。
SHR：共享内存大小。
S：进程状态（R=运行，S=睡眠，D=不可中断的睡眠，Z=僵尸，T=停止）。
%CPU：进程占用的 CPU 百分比。
%MEM：进程占用的内存百分比。
TIME+：进程累计使用的 CPU 时间。
COMMAND：启动该进程的命令名称。

------------------------------------------------------------------------------------------------------------------------

df: 查看磁盘使用情况
df [选项]
选项：
-h: 以人可读形式显示
目录：显示特定文件系统的磁盘使用情况
-T: 显示文件类型

Filesystem      Size  Used Avail Use% Mounted on
udev            7.8G     0  7.8G   0% /dev
tmpfs           1.6G   23M  1.6G   2% /run
/dev/sda1        50G   10G   40G  20% /
tmpfs           7.8G  1.3M  7.8G   1% /dev/shm
tmpfs           5.0M  4.0K  5.0M   1% /run/lock

Filesystem：文件系统或设备名称。
1K-blocks：文件系统总大小（单位为 1KB 的块）。
Used：已使用的空间。
Available：剩余可用空间。
Use%：已使用空间占总空间的百分比。
Mounted on：文件系统的挂载点。

------------------------------------------------------------------------------------------------------------------------

gcc编译(G++同理)

gcc -I ./hellodir hello.c -o hello
当头文件和源码不在一个目录下时，需要指定头文件所在目录(而不是头文件本身路径)

-I			@@@  指定头文件所在目录  @@@
-c 			@@@  只做预处理，编译，汇编，不链接。得到.o目标文件(内容为二进制)  @@@
-l<库名>	@@@  链接指定的库  @@@
-L			@@@  指定库文件所在目录  @@@
-shared		@@@  生成共享库(动态库)  @@@
	gcc -shared -fPIC source.c -o libmylib.so
-fPIC		@@@  生成位置无关代码(Position Independent Code)，通常用于构建共享库  @@@
	gcc -fPIC source.c -o program
	
	
-E			只做预处理，得到.i文件
-S			只做预处理，编译，得到.s文件
-g 			编译时添加调试文件，用于gdb调试
-Wall 		显示所有警告信息(Warning all)
-D<宏名>  	动态注册宏定义(#define)
-U<宏名>	取消定义一个宏
-O<n>		设置优化级别
	-O0：无优化（默认）
	-O1：基本优化
	-O2：更高级的优化
	-O3：最高级别的优化
-Werror		将警告视为错误，阻止编译通过
-std=<标准>	指定使用的语言标准。例如：
	-std=c99：使用 C99 标准。
	-std=c++11：使用 C++11 标准。